//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClarityTestappLoader.Console.SilverlightService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.croc.ru", ConfigurationName="SilverlightService.SilverLightServicesSoap")]
    public interface SilverLightServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableActivityTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAvailableActivityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableActivityTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAvailableActivityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Role[] GetAvailableRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableRoles", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Role[]> GetAvailableRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Right[] GetAvailableRights();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableRights", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Right[]> GetAvailableRightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string[] GetAvailableGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetAvailableGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAvailableGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CreateNewSecurityRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult CreateNewSecurityRule(ClarityTestappLoader.Console.SilverlightService.SecurityRule securityRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CreateNewSecurityRule", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> CreateNewSecurityRuleAsync(ClarityTestappLoader.Console.SilverlightService.SecurityRule securityRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteSecurityRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult DeleteSecurityRule(int[] ruleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteSecurityRule", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> DeleteSecurityRuleAsync(int[] ruleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentSecurityRulesList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.SecurityRule[] GetCurrentSecurityRulesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentSecurityRulesList", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SecurityRule[]> GetCurrentSecurityRulesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/UpdateSecurityRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult UpdateSecurityRule(ClarityTestappLoader.Console.SilverlightService.SecurityRule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/UpdateSecurityRule", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> UpdateSecurityRuleAsync(ClarityTestappLoader.Console.SilverlightService.SecurityRule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/AddSubProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.AddSubProjectResult AddSubProject(ClarityTestappLoader.Console.SilverlightService.Subproject newSubproject);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/AddSubProject", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.AddSubProjectResult> AddSubProjectAsync(ClarityTestappLoader.Console.SilverlightService.Subproject newSubproject);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetSubProjectParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.SubProjectParams GetSubProjectParams(string ProjectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetSubProjectParams", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SubProjectParams> GetSubProjectParamsAsync(string ProjectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteSubproject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Status DeleteSubproject(string projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteSubproject", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> DeleteSubprojectAsync(string projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetSimpleProjectWithParent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Subproject GetSimpleProjectWithParent(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetSimpleProjectWithParent", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Subproject> GetSimpleProjectWithParentAsync(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetClientUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetClientUserName();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetClientUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientUserNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentResourceCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetCurrentResourceCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentResourceCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentResourceCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentUserCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetCurrentUserCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentUserCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentUserCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetUserRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.UserRight[] GetUserRights(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetUserRights", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.UserRight[]> GetUserRightsAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentUserRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.UserRight[] GetCurrentUserRights();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentUserRights", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.UserRight[]> GetCurrentUserRightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetObjectID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetObjectID(string code, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetObjectID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetObjectIDAsync(string code, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetResourceCodeByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetResourceCodeByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetResourceCodeByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetResourceCodeByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ReportAboutClientError", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        void ReportAboutClientError(string sourceName, string exceptionMessage, string exceptionStackTrace, string innerException);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ReportAboutClientError", ReplyAction="*")]
        System.Threading.Tasks.Task ReportAboutClientErrorAsync(string sourceName, string exceptionMessage, string exceptionStackTrace, string innerException);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ProjectsSync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.ProjectSyncResults ProjectsSync(string ProjectCode, bool isMassUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ProjectsSync", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ProjectSyncResults> ProjectsSyncAsync(string ProjectCode, bool isMassUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ImportFromMSPFromFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto ImportFromMSPFromFile(string projectCode, string userName, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ImportFromMSPFromFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto> ImportFromMSPFromFileAsync(string projectCode, string userName, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ImportFromMSP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto ImportFromMSP(ClarityTestappLoader.Console.SilverlightService.ImportProjectParamsDto importParamsDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/ImportFromMSP", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto> ImportFromMSPAsync(ClarityTestappLoader.Console.SilverlightService.ImportProjectParamsDto importParamsDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsProjectImportInProgress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.IsProjectImportInProgressExecResult IsProjectImportInProgress(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsProjectImportInProgress", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.IsProjectImportInProgressExecResult> IsProjectImportInProgressAsync(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetClarityResources", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.GetResourcesExecutionResult GetClarityResources();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetClarityResources", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.GetResourcesExecutionResult> GetClarityResourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetMspSessionParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MspSessionParams GetMspSessionParams(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetMspSessionParams", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MspSessionParams> GetMspSessionParamsAsync(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsProjectLockedByCurrentUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.IsProjectLockedByCurrentUserExecResult IsProjectLockedByCurrentUser(string projectCode, string userDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsProjectLockedByCurrentUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.IsProjectLockedByCurrentUserExecResult> IsProjectLockedByCurrentUserAsync(string projectCode, string userDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentAddinVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetCurrentAddinVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentAddinVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentAddinVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetResourceAvailabilityPeriods", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.ResourceCalendarAvailability[] GetResourceAvailabilityPeriods(string[] resourceUniqueNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetResourceAvailabilityPeriods", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ResourceCalendarAvailability[]> GetResourceAvailabilityPeriodsAsync(string[] resourceUniqueNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SendAddinInnerSystemExceptionToSupport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        void SendAddinInnerSystemExceptionToSupport(string exceptionText);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SendAddinInnerSystemExceptionToSupport", ReplyAction="*")]
        System.Threading.Tasks.Task SendAddinInnerSystemExceptionToSupportAsync(string exceptionText);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentResourceAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.ResourceAvailability GetCurrentResourceAvailability(string resourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetCurrentResourceAvailability", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ResourceAvailability> GetCurrentResourceAvailabilityAsync(string resourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GenerateNewResourceAvailabilityXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GenerateNewResourceAvailabilityXML(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GenerateNewResourceAvailabilityXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateNewResourceAvailabilityXMLAsync(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SetNewResourceAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Status SetNewResourceAvailability(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SetNewResourceAvailability", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> SetNewResourceAvailabilityAsync(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTimesheetActionItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList GetTimesheetActionItems(string ResourceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTimesheetActionItems", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList> GetTimesheetActionItemsAsync(string ResourceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SetTimesheetActionItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Status SetTimesheetActionItems(ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList TimeSheetParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/SetTimesheetActionItems", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> SetTimesheetActionItemsAsync(ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList TimeSheetParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTSComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetTSComment(string TSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTSComment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTSCommentAsync(string TSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTSProjectComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        string GetTSProjectComment(string InvId, string TSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTSProjectComment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTSProjectCommentAsync(string InvId, string TSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/NotifyManagerIfReturnAndProjectClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        void NotifyManagerIfReturnAndProjectClosed(string managerEmail, string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/NotifyManagerIfReturnAndProjectClosed", ReplyAction="*")]
        System.Threading.Tasks.Task NotifyManagerIfReturnAndProjectClosedAsync(string managerEmail, string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CheckActualsForTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Actual[] CheckActualsForTransfer(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CheckActualsForTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Actual[]> CheckActualsForTransferAsync(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/TransferActuals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult TransferActuals(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals, string fromProjectCode, string toProjectCode, string toTaskInternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/TransferActuals", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> TransferActualsAsync(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals, string fromProjectCode, string toProjectCode, string toTaskInternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CopyProjectStructure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult CopyProjectStructure(ClarityTestappLoader.Console.SilverlightService.ProjectStructureCopyParams copyParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/CopyProjectStructure", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> CopyProjectStructureAsync(ClarityTestappLoader.Console.SilverlightService.ProjectStructureCopyParams copyParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetWipAdjustmentFormInitParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.FormInitializeParams GetWipAdjustmentFormInitParams();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetWipAdjustmentFormInitParams", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.FormInitializeParams> GetWipAdjustmentFormInitParamsAsync();
        
        // CODEGEN: Parameter 'GetStartDateOfCurrentFiscalPeriodResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetStartDateOfCurrentFiscalPeriod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse GetStartDateOfCurrentFiscalPeriod(ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetStartDateOfCurrentFiscalPeriod", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse> GetStartDateOfCurrentFiscalPeriodAsync(ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsCurrentUserTLAdminGroupMemberStub", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        bool IsCurrentUserTLAdminGroupMemberStub(string userDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsCurrentUserTLAdminGroupMemberStub", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsCurrentUserTLAdminGroupMemberStubAsync(string userDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsCurrentUserTLAdminGroupMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        bool IsCurrentUserTLAdminGroupMember();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/IsCurrentUserTLAdminGroupMember", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsCurrentUserTLAdminGroupMemberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectAssignments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Assignment[] GetProjectAssignments(long projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectAssignments", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Assignment[]> GetProjectAssignmentsAsync(long projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsByName(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsByName", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsByNameAsync(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsByFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsByFilter(ClarityTestappLoader.Console.SilverlightService.ProjectFieldsFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsByFilter", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsByFilterAsync(ClarityTestappLoader.Console.SilverlightService.ProjectFieldsFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsWithRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsWithRestriction();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectsWithRestriction", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsWithRestrictionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Task[] GetTasks(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Task[]> GetTasksAsync(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectActuals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Actual[] GetProjectActuals(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectActuals", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Actual[]> GetProjectActualsAsync(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.Resource[] GetProjectTeam(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/GetProjectTeam", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Resource[]> GetProjectTeamAsync(string projectCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteVacationOtherWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WebMethodExecutionResult))]
        ClarityTestappLoader.Console.SilverlightService.MethodResult DeleteVacationOtherWork(string otherWorkCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.croc.ru/DeleteVacationOtherWork", ReplyAction="*")]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> DeleteVacationOtherWorkAsync(string otherWorkCode);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Role : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        private EntityType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public EntityType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public enum EntityType {
        
        /// <remarks/>
        Project,
        
        /// <remarks/>
        Resource,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Resource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string fullNameField;
        
        private string uniqueNameField;
        
        private decimal isRoleField;
        
        private decimal isArchiveField;
        
        private decimal isActiveField;
        
        private string roleNameField;
        
        private string externalIdField;
        
        private string companyField;
        
        private string departmentField;
        
        private string divisionField;
        
        private string unitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UniqueName {
            get {
                return this.uniqueNameField;
            }
            set {
                this.uniqueNameField = value;
                this.RaisePropertyChanged("UniqueName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal IsRole {
            get {
                return this.isRoleField;
            }
            set {
                this.isRoleField = value;
                this.RaisePropertyChanged("IsRole");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public decimal IsArchive {
            get {
                return this.isArchiveField;
            }
            set {
                this.isArchiveField = value;
                this.RaisePropertyChanged("IsArchive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public decimal IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
                this.RaisePropertyChanged("RoleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
                this.RaisePropertyChanged("ExternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("Department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
                this.RaisePropertyChanged("Division");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Task : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectCodeField;
        
        private string nameField;
        
        private string idField;
        
        private string externalIdField;
        
        private decimal isSummaryTaskField;
        
        private System.DateTime startDateField;
        
        private System.DateTime finishDateField;
        
        private decimal actualsSumField;
        
        private decimal isRealMicromanagementField;
        
        private decimal isHpsmSummanryTaskField;
        
        private decimal isArchiveField;
        
        private decimal isTechFirstTypeField;
        
        private decimal isServiceManagementField;
        
        private decimal isTaskActualsField;
        
        private decimal isHpsmSubsidiaryTaskField;
        
        private decimal isTechSecondTypeField;
        
        private decimal isSubprojectField;
        
        private decimal isHpsmArchiveTaskField;
        
        private decimal isRealJiraField;
        
        private string parentTaskIdField;
        
        private string outlineLevelField;
        
        private int statusField;
        
        private Assignment[] assignmentsField;
        
        private float percentCompletedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
                this.RaisePropertyChanged("ProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
                this.RaisePropertyChanged("ExternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal IsSummaryTask {
            get {
                return this.isSummaryTaskField;
            }
            set {
                this.isSummaryTaskField = value;
                this.RaisePropertyChanged("IsSummaryTask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime FinishDate {
            get {
                return this.finishDateField;
            }
            set {
                this.finishDateField = value;
                this.RaisePropertyChanged("FinishDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public decimal ActualsSum {
            get {
                return this.actualsSumField;
            }
            set {
                this.actualsSumField = value;
                this.RaisePropertyChanged("ActualsSum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public decimal IsRealMicromanagement {
            get {
                return this.isRealMicromanagementField;
            }
            set {
                this.isRealMicromanagementField = value;
                this.RaisePropertyChanged("IsRealMicromanagement");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public decimal IsHpsmSummanryTask {
            get {
                return this.isHpsmSummanryTaskField;
            }
            set {
                this.isHpsmSummanryTaskField = value;
                this.RaisePropertyChanged("IsHpsmSummanryTask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public decimal IsArchive {
            get {
                return this.isArchiveField;
            }
            set {
                this.isArchiveField = value;
                this.RaisePropertyChanged("IsArchive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public decimal IsTechFirstType {
            get {
                return this.isTechFirstTypeField;
            }
            set {
                this.isTechFirstTypeField = value;
                this.RaisePropertyChanged("IsTechFirstType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public decimal IsServiceManagement {
            get {
                return this.isServiceManagementField;
            }
            set {
                this.isServiceManagementField = value;
                this.RaisePropertyChanged("IsServiceManagement");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public decimal IsTaskActuals {
            get {
                return this.isTaskActualsField;
            }
            set {
                this.isTaskActualsField = value;
                this.RaisePropertyChanged("IsTaskActuals");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public decimal IsHpsmSubsidiaryTask {
            get {
                return this.isHpsmSubsidiaryTaskField;
            }
            set {
                this.isHpsmSubsidiaryTaskField = value;
                this.RaisePropertyChanged("IsHpsmSubsidiaryTask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public decimal IsTechSecondType {
            get {
                return this.isTechSecondTypeField;
            }
            set {
                this.isTechSecondTypeField = value;
                this.RaisePropertyChanged("IsTechSecondType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public decimal IsSubproject {
            get {
                return this.isSubprojectField;
            }
            set {
                this.isSubprojectField = value;
                this.RaisePropertyChanged("IsSubproject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public decimal IsHpsmArchiveTask {
            get {
                return this.isHpsmArchiveTaskField;
            }
            set {
                this.isHpsmArchiveTaskField = value;
                this.RaisePropertyChanged("IsHpsmArchiveTask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public decimal IsRealJira {
            get {
                return this.isRealJiraField;
            }
            set {
                this.isRealJiraField = value;
                this.RaisePropertyChanged("IsRealJira");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string ParentTaskId {
            get {
                return this.parentTaskIdField;
            }
            set {
                this.parentTaskIdField = value;
                this.RaisePropertyChanged("ParentTaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string OutlineLevel {
            get {
                return this.outlineLevelField;
            }
            set {
                this.outlineLevelField = value;
                this.RaisePropertyChanged("OutlineLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=22)]
        public Assignment[] Assignments {
            get {
                return this.assignmentsField;
            }
            set {
                this.assignmentsField = value;
                this.RaisePropertyChanged("Assignments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public float PercentCompleted {
            get {
                return this.percentCompletedField;
            }
            set {
                this.percentCompletedField = value;
                this.RaisePropertyChanged("PercentCompleted");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Assignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string resourceIdField;
        
        private int estPatternField;
        
        private decimal etcField;
        
        private string roleIdField;
        
        private System.DateTime startField;
        
        private System.DateTime finishField;
        
        private float actualWorkField;
        
        private float remainingWorkField;
        
        private string taskIdField;
        
        private string projectIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResourceId {
            get {
                return this.resourceIdField;
            }
            set {
                this.resourceIdField = value;
                this.RaisePropertyChanged("ResourceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int EstPattern {
            get {
                return this.estPatternField;
            }
            set {
                this.estPatternField = value;
                this.RaisePropertyChanged("EstPattern");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Etc {
            get {
                return this.etcField;
            }
            set {
                this.etcField = value;
                this.RaisePropertyChanged("Etc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
                this.RaisePropertyChanged("RoleId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
                this.RaisePropertyChanged("Start");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime Finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
                this.RaisePropertyChanged("Finish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float ActualWork {
            get {
                return this.actualWorkField;
            }
            set {
                this.actualWorkField = value;
                this.RaisePropertyChanged("ActualWork");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public float RemainingWork {
            get {
                return this.remainingWorkField;
            }
            set {
                this.remainingWorkField = value;
                this.RaisePropertyChanged("RemainingWork");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("TaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
                this.RaisePropertyChanged("ProjectId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ProjectFieldsFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] activityTypeFilterField;
        
        private string nameFilterField;
        
        private string codeFilterField;
        
        private string navisionCodeFilterField;
        
        private string uniqueCodeFilterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] ActivityTypeFilter {
            get {
                return this.activityTypeFilterField;
            }
            set {
                this.activityTypeFilterField = value;
                this.RaisePropertyChanged("ActivityTypeFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string NameFilter {
            get {
                return this.nameFilterField;
            }
            set {
                this.nameFilterField = value;
                this.RaisePropertyChanged("NameFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CodeFilter {
            get {
                return this.codeFilterField;
            }
            set {
                this.codeFilterField = value;
                this.RaisePropertyChanged("CodeFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string NavisionCodeFilter {
            get {
                return this.navisionCodeFilterField;
            }
            set {
                this.navisionCodeFilterField = value;
                this.RaisePropertyChanged("NavisionCodeFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string UniqueCodeFilter {
            get {
                return this.uniqueCodeFilterField;
            }
            set {
                this.uniqueCodeFilterField = value;
                this.RaisePropertyChanged("UniqueCodeFilter");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Activity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string codeField;
        
        private string navisionCodeField;
        
        private string uniqueCodeField;
        
        private string activityTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string NavisionCode {
            get {
                return this.navisionCodeField;
            }
            set {
                this.navisionCodeField = value;
                this.RaisePropertyChanged("NavisionCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string UniqueCode {
            get {
                return this.uniqueCodeField;
            }
            set {
                this.uniqueCodeField = value;
                this.RaisePropertyChanged("UniqueCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ActivityType {
            get {
                return this.activityTypeField;
            }
            set {
                this.activityTypeField = value;
                this.RaisePropertyChanged("ActivityType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class FormInitializeParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool isCurrentUserTLAdminGroupMemberField;
        
        private System.Nullable<System.DateTime> startDateOfCurrentFiscalPeriodField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsCurrentUserTLAdminGroupMember {
            get {
                return this.isCurrentUserTLAdminGroupMemberField;
            }
            set {
                this.isCurrentUserTLAdminGroupMemberField = value;
                this.RaisePropertyChanged("IsCurrentUserTLAdminGroupMember");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> StartDateOfCurrentFiscalPeriod {
            get {
                return this.startDateOfCurrentFiscalPeriodField;
            }
            set {
                this.startDateOfCurrentFiscalPeriodField = value;
                this.RaisePropertyChanged("StartDateOfCurrentFiscalPeriod");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Branch : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] branchTasksIdsField;
        
        private string copyToTaskIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] BranchTasksIds {
            get {
                return this.branchTasksIdsField;
            }
            set {
                this.branchTasksIdsField = value;
                this.RaisePropertyChanged("BranchTasksIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CopyToTaskId {
            get {
                return this.copyToTaskIdField;
            }
            set {
                this.copyToTaskIdField = value;
                this.RaisePropertyChanged("CopyToTaskId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ProjectStructureCopyParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] copyTasksInternalIdsField;
        
        private string copyFromProjectCodeField;
        
        private string copyToProjectCodeField;
        
        private bool isTasksDependenciesCopyNeededField;
        
        private bool allTasksAreRelatedField;
        
        private Branch[] branchesField;
        
        private string[] uncheckedAssignmentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] CopyTasksInternalIds {
            get {
                return this.copyTasksInternalIdsField;
            }
            set {
                this.copyTasksInternalIdsField = value;
                this.RaisePropertyChanged("CopyTasksInternalIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CopyFromProjectCode {
            get {
                return this.copyFromProjectCodeField;
            }
            set {
                this.copyFromProjectCodeField = value;
                this.RaisePropertyChanged("CopyFromProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CopyToProjectCode {
            get {
                return this.copyToProjectCodeField;
            }
            set {
                this.copyToProjectCodeField = value;
                this.RaisePropertyChanged("CopyToProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsTasksDependenciesCopyNeeded {
            get {
                return this.isTasksDependenciesCopyNeededField;
            }
            set {
                this.isTasksDependenciesCopyNeededField = value;
                this.RaisePropertyChanged("IsTasksDependenciesCopyNeeded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool AllTasksAreRelated {
            get {
                return this.allTasksAreRelatedField;
            }
            set {
                this.allTasksAreRelatedField = value;
                this.RaisePropertyChanged("AllTasksAreRelated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public Branch[] Branches {
            get {
                return this.branchesField;
            }
            set {
                this.branchesField = value;
                this.RaisePropertyChanged("Branches");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] UncheckedAssignments {
            get {
                return this.uncheckedAssignmentsField;
            }
            set {
                this.uncheckedAssignmentsField = value;
                this.RaisePropertyChanged("UncheckedAssignments");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Actual : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectCodeField;
        
        private string taskIdField;
        
        private System.DateTime dateField;
        
        private decimal amountField;
        
        private string sourceField;
        
        private string resourceCodeField;
        
        private string internalTaskIdField;
        
        private string transactionTableField;
        
        private string externalBatchIdField;
        
        private bool isPostedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
                this.RaisePropertyChanged("ProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("TaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
                this.RaisePropertyChanged("Source");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ResourceCode {
            get {
                return this.resourceCodeField;
            }
            set {
                this.resourceCodeField = value;
                this.RaisePropertyChanged("ResourceCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string InternalTaskId {
            get {
                return this.internalTaskIdField;
            }
            set {
                this.internalTaskIdField = value;
                this.RaisePropertyChanged("InternalTaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TransactionTable {
            get {
                return this.transactionTableField;
            }
            set {
                this.transactionTableField = value;
                this.RaisePropertyChanged("TransactionTable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ExternalBatchId {
            get {
                return this.externalBatchIdField;
            }
            set {
                this.externalBatchIdField = value;
                this.RaisePropertyChanged("ExternalBatchId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsPosted {
            get {
                return this.isPostedField;
            }
            set {
                this.isPostedField = value;
                this.RaisePropertyChanged("IsPosted");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class TimeEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string timeSheetIDField;
        
        private System.DateTime periodStartField;
        
        private System.DateTime periodFinishField;
        
        private string resourceIDField;
        
        private string resourceNameField;
        
        private string projectCodeField;
        
        private string projectTypeField;
        
        private string investmentIDField;
        
        private string projectNameField;
        
        private bool isProjectClosedField;
        
        private decimal actualsSumField;
        
        private decimal planSumField;
        
        private decimal vArianceField;
        
        private TimeEntryStatus_old status_oldField;
        
        private TimeEntryStatus_new status_newField;
        
        private bool isTSCommentField;
        
        private bool isTSProjectCommentField;
        
        private string tSCommentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TimeSheetID {
            get {
                return this.timeSheetIDField;
            }
            set {
                this.timeSheetIDField = value;
                this.RaisePropertyChanged("TimeSheetID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime PeriodStart {
            get {
                return this.periodStartField;
            }
            set {
                this.periodStartField = value;
                this.RaisePropertyChanged("PeriodStart");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime PeriodFinish {
            get {
                return this.periodFinishField;
            }
            set {
                this.periodFinishField = value;
                this.RaisePropertyChanged("PeriodFinish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ResourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
                this.RaisePropertyChanged("ResourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ResourceName {
            get {
                return this.resourceNameField;
            }
            set {
                this.resourceNameField = value;
                this.RaisePropertyChanged("ResourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
                this.RaisePropertyChanged("ProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ProjectType {
            get {
                return this.projectTypeField;
            }
            set {
                this.projectTypeField = value;
                this.RaisePropertyChanged("ProjectType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string InvestmentID {
            get {
                return this.investmentIDField;
            }
            set {
                this.investmentIDField = value;
                this.RaisePropertyChanged("InvestmentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
                this.RaisePropertyChanged("ProjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsProjectClosed {
            get {
                return this.isProjectClosedField;
            }
            set {
                this.isProjectClosedField = value;
                this.RaisePropertyChanged("IsProjectClosed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public decimal ActualsSum {
            get {
                return this.actualsSumField;
            }
            set {
                this.actualsSumField = value;
                this.RaisePropertyChanged("ActualsSum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public decimal PlanSum {
            get {
                return this.planSumField;
            }
            set {
                this.planSumField = value;
                this.RaisePropertyChanged("PlanSum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public decimal VAriance {
            get {
                return this.vArianceField;
            }
            set {
                this.vArianceField = value;
                this.RaisePropertyChanged("VAriance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public TimeEntryStatus_old Status_old {
            get {
                return this.status_oldField;
            }
            set {
                this.status_oldField = value;
                this.RaisePropertyChanged("Status_old");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public TimeEntryStatus_new Status_new {
            get {
                return this.status_newField;
            }
            set {
                this.status_newField = value;
                this.RaisePropertyChanged("Status_new");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool IsTSComment {
            get {
                return this.isTSCommentField;
            }
            set {
                this.isTSCommentField = value;
                this.RaisePropertyChanged("IsTSComment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool IsTSProjectComment {
            get {
                return this.isTSProjectCommentField;
            }
            set {
                this.isTSProjectCommentField = value;
                this.RaisePropertyChanged("IsTSProjectComment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string TSComment {
            get {
                return this.tSCommentField;
            }
            set {
                this.tSCommentField = value;
                this.RaisePropertyChanged("TSComment");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="www.croc.ru")]
    public enum TimeEntryStatus_old {
        
        /// <remarks/>
        APPROVE,
        
        /// <remarks/>
        RETURN,
        
        /// <remarks/>
        OPEN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="www.croc.ru")]
    public enum TimeEntryStatus_new {
        
        /// <remarks/>
        APPROVE,
        
        /// <remarks/>
        RETURN,
        
        /// <remarks/>
        OPEN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class SilverLigghtTimesheetList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resourceCodeField;
        
        private TimeEntry[] timesheetsField;
        
        private Status statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ResourceCode {
            get {
                return this.resourceCodeField;
            }
            set {
                this.resourceCodeField = value;
                this.RaisePropertyChanged("ResourceCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public TimeEntry[] Timesheets {
            get {
                return this.timesheetsField;
            }
            set {
                this.timesheetsField = value;
                this.RaisePropertyChanged("Timesheets");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Status : BaseStatus {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Status))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class BaseStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusCodeField;
        
        private string serverCodeField;
        
        private string descriptionField;
        
        private string messageField;
        
        private string stackField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
                this.RaisePropertyChanged("StatusCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ServerCode {
            get {
                return this.serverCodeField;
            }
            set {
                this.serverCodeField = value;
                this.RaisePropertyChanged("ServerCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Stack {
            get {
                return this.stackField;
            }
            set {
                this.stackField = value;
                this.RaisePropertyChanged("Stack");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ResourceAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resourceIDField;
        
        private string resourceNameField;
        
        private System.Nullable<System.DateTime> lastHolidayField;
        
        private System.Nullable<System.DateTime> oldAvailabilityFromField;
        
        private int oldAvailabilityRateField;
        
        private string oldCalendarNameField;
        
        private System.Nullable<System.DateTime> currentAvailabilityFromField;
        
        private System.Nullable<System.DateTime> currentAvailabilityToField;
        
        private int currentAvailabilityRateField;
        
        private string currentCalendarNameField;
        
        private BaseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ResourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
                this.RaisePropertyChanged("ResourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResourceName {
            get {
                return this.resourceNameField;
            }
            set {
                this.resourceNameField = value;
                this.RaisePropertyChanged("ResourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> LastHoliday {
            get {
                return this.lastHolidayField;
            }
            set {
                this.lastHolidayField = value;
                this.RaisePropertyChanged("LastHoliday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> OldAvailabilityFrom {
            get {
                return this.oldAvailabilityFromField;
            }
            set {
                this.oldAvailabilityFromField = value;
                this.RaisePropertyChanged("OldAvailabilityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int OldAvailabilityRate {
            get {
                return this.oldAvailabilityRateField;
            }
            set {
                this.oldAvailabilityRateField = value;
                this.RaisePropertyChanged("OldAvailabilityRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OldCalendarName {
            get {
                return this.oldCalendarNameField;
            }
            set {
                this.oldCalendarNameField = value;
                this.RaisePropertyChanged("OldCalendarName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<System.DateTime> CurrentAvailabilityFrom {
            get {
                return this.currentAvailabilityFromField;
            }
            set {
                this.currentAvailabilityFromField = value;
                this.RaisePropertyChanged("CurrentAvailabilityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<System.DateTime> CurrentAvailabilityTo {
            get {
                return this.currentAvailabilityToField;
            }
            set {
                this.currentAvailabilityToField = value;
                this.RaisePropertyChanged("CurrentAvailabilityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int CurrentAvailabilityRate {
            get {
                return this.currentAvailabilityRateField;
            }
            set {
                this.currentAvailabilityRateField = value;
                this.RaisePropertyChanged("CurrentAvailabilityRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CurrentCalendarName {
            get {
                return this.currentCalendarNameField;
            }
            set {
                this.currentCalendarNameField = value;
                this.RaisePropertyChanged("CurrentCalendarName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public BaseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class AvailabilityPeriod : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime startField;
        
        private System.DateTime finishField;
        
        private decimal valueField;
        
        private bool isActualField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
                this.RaisePropertyChanged("Start");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
                this.RaisePropertyChanged("Finish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsActual {
            get {
                return this.isActualField;
            }
            set {
                this.isActualField = value;
                this.RaisePropertyChanged("IsActual");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ResourceCalendarAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resourceUniqueNameField;
        
        private AvailabilityPeriod[] availabilityRatePeriodsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ResourceUniqueName {
            get {
                return this.resourceUniqueNameField;
            }
            set {
                this.resourceUniqueNameField = value;
                this.RaisePropertyChanged("ResourceUniqueName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public AvailabilityPeriod[] AvailabilityRatePeriods {
            get {
                return this.availabilityRatePeriodsField;
            }
            set {
                this.availabilityRatePeriodsField = value;
                this.RaisePropertyChanged("AvailabilityRatePeriods");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class MspSessionParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectCodeField;
        
        private ExportMode modeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
                this.RaisePropertyChanged("ProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ExportMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public enum ExportMode {
        
        /// <remarks/>
        WithoutLock,
        
        /// <remarks/>
        WithLock,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsProjectLockedByCurrentUserExecResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetResourcesExecutionResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsProjectImportInProgressExecResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class WebMethodExecutionResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool isSystemErrorOccurredField;
        
        private string systemErrorTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsSystemErrorOccurred {
            get {
                return this.isSystemErrorOccurredField;
            }
            set {
                this.isSystemErrorOccurredField = value;
                this.RaisePropertyChanged("IsSystemErrorOccurred");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SystemErrorText {
            get {
                return this.systemErrorTextField;
            }
            set {
                this.systemErrorTextField = value;
                this.RaisePropertyChanged("SystemErrorText");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class IsProjectLockedByCurrentUserExecResult : WebMethodExecutionResult {
        
        private bool isProjectLockedByCurrentUserField;
        
        private string lockedByUserField;
        
        private System.DateTime lockedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsProjectLockedByCurrentUser {
            get {
                return this.isProjectLockedByCurrentUserField;
            }
            set {
                this.isProjectLockedByCurrentUserField = value;
                this.RaisePropertyChanged("IsProjectLockedByCurrentUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LockedByUser {
            get {
                return this.lockedByUserField;
            }
            set {
                this.lockedByUserField = value;
                this.RaisePropertyChanged("LockedByUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime LockedDate {
            get {
                return this.lockedDateField;
            }
            set {
                this.lockedDateField = value;
                this.RaisePropertyChanged("LockedDate");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class GetResourcesExecutionResult : WebMethodExecutionResult {
        
        private ClarityResourceDto[] clarityResourcesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ClarityResourceDto[] ClarityResources {
            get {
                return this.clarityResourcesField;
            }
            set {
                this.clarityResourcesField = value;
                this.RaisePropertyChanged("ClarityResources");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ClarityResourceDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainNameField;
        
        private string fullNameField;
        
        private bool isRoleField;
        
        private bool isStandartRoleField;
        
        private bool isContractorField;
        
        private string unitField;
        
        private string divisionField;
        
        private string departmentField;
        
        private string companyField;
        
        private string mspUidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
                this.RaisePropertyChanged("DomainName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsRole {
            get {
                return this.isRoleField;
            }
            set {
                this.isRoleField = value;
                this.RaisePropertyChanged("IsRole");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsStandartRole {
            get {
                return this.isStandartRoleField;
            }
            set {
                this.isStandartRoleField = value;
                this.RaisePropertyChanged("IsStandartRole");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsContractor {
            get {
                return this.isContractorField;
            }
            set {
                this.isContractorField = value;
                this.RaisePropertyChanged("IsContractor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
                this.RaisePropertyChanged("Division");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("Department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MspUid {
            get {
                return this.mspUidField;
            }
            set {
                this.mspUidField = value;
                this.RaisePropertyChanged("MspUid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class IsProjectImportInProgressExecResult : WebMethodExecutionResult {
        
        private bool isImportInProgressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsImportInProgress {
            get {
                return this.isImportInProgressField;
            }
            set {
                this.isImportInProgressField = value;
                this.RaisePropertyChanged("IsImportInProgress");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ImportProjectParamsDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectCodeField;
        
        private string userDomainNameField;
        
        private bool leaveProjectLockField;
        
        private System.Xml.XmlElement mspProjectXmlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
                this.RaisePropertyChanged("ProjectCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserDomainName {
            get {
                return this.userDomainNameField;
            }
            set {
                this.userDomainNameField = value;
                this.RaisePropertyChanged("UserDomainName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool LeaveProjectLock {
            get {
                return this.leaveProjectLockField;
            }
            set {
                this.leaveProjectLockField = value;
                this.RaisePropertyChanged("LeaveProjectLock");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Xml.XmlElement MspProjectXml {
            get {
                return this.mspProjectXmlField;
            }
            set {
                this.mspProjectXmlField = value;
                this.RaisePropertyChanged("MspProjectXml");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class TaskError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string taskNameField;
        
        private string taskIdField;
        
        private string errorTextField;
        
        private string taskNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TaskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
                this.RaisePropertyChanged("TaskName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("TaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
                this.RaisePropertyChanged("ErrorText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
                this.RaisePropertyChanged("TaskNo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ImportProjectResultDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid sessionIdField;
        
        private bool isNewSessionField;
        
        private ClarityResourceDto[] createdResourcesField;
        
        private bool errorOccurredField;
        
        private TaskError[] taskErrorsField;
        
        private string systemErrorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid SessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
                this.RaisePropertyChanged("SessionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsNewSession {
            get {
                return this.isNewSessionField;
            }
            set {
                this.isNewSessionField = value;
                this.RaisePropertyChanged("IsNewSession");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ClarityResourceDto[] CreatedResources {
            get {
                return this.createdResourcesField;
            }
            set {
                this.createdResourcesField = value;
                this.RaisePropertyChanged("CreatedResources");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool ErrorOccurred {
            get {
                return this.errorOccurredField;
            }
            set {
                this.errorOccurredField = value;
                this.RaisePropertyChanged("ErrorOccurred");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public TaskError[] TaskErrors {
            get {
                return this.taskErrorsField;
            }
            set {
                this.taskErrorsField = value;
                this.RaisePropertyChanged("TaskErrors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SystemError {
            get {
                return this.systemErrorField;
            }
            set {
                this.systemErrorField = value;
                this.RaisePropertyChanged("SystemError");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class ProjectSyncResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string typeField;
        
        private string intIdField;
        
        private bool syncStatusField;
        
        private string syncResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string IntId {
            get {
                return this.intIdField;
            }
            set {
                this.intIdField = value;
                this.RaisePropertyChanged("IntId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool SyncStatus {
            get {
                return this.syncStatusField;
            }
            set {
                this.syncStatusField = value;
                this.RaisePropertyChanged("SyncStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string SyncResult {
            get {
                return this.syncResultField;
            }
            set {
                this.syncResultField = value;
                this.RaisePropertyChanged("SyncResult");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class UserRight : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accessRightNameField;
        
        private string descriptionField;
        
        private string groupCodeField;
        
        private string grantedByField;
        
        private string accessRightTypeField;
        
        private string instanceIdField;
        
        private string instanceObjectTypeField;
        
        private string accessRightCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AccessRightName {
            get {
                return this.accessRightNameField;
            }
            set {
                this.accessRightNameField = value;
                this.RaisePropertyChanged("AccessRightName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
                this.RaisePropertyChanged("GroupCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string GrantedBy {
            get {
                return this.grantedByField;
            }
            set {
                this.grantedByField = value;
                this.RaisePropertyChanged("GrantedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AccessRightType {
            get {
                return this.accessRightTypeField;
            }
            set {
                this.accessRightTypeField = value;
                this.RaisePropertyChanged("AccessRightType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string InstanceId {
            get {
                return this.instanceIdField;
            }
            set {
                this.instanceIdField = value;
                this.RaisePropertyChanged("InstanceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string InstanceObjectType {
            get {
                return this.instanceObjectTypeField;
            }
            set {
                this.instanceObjectTypeField = value;
                this.RaisePropertyChanged("InstanceObjectType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AccessRightCode {
            get {
                return this.accessRightCodeField;
            }
            set {
                this.accessRightCodeField = value;
                this.RaisePropertyChanged("AccessRightCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class SubprojectManager : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string fullNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class SubProjectParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string internalProjectIdField;
        
        private string invStageField;
        
        private SubprojectManager[] managerListField;
        
        private Status statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string InternalProjectId {
            get {
                return this.internalProjectIdField;
            }
            set {
                this.internalProjectIdField = value;
                this.RaisePropertyChanged("InternalProjectId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string InvStage {
            get {
                return this.invStageField;
            }
            set {
                this.invStageField = value;
                this.RaisePropertyChanged("InvStage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public SubprojectManager[] ManagerList {
            get {
                return this.managerListField;
            }
            set {
                this.managerListField = value;
                this.RaisePropertyChanged("ManagerList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class AddSubProjectResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subProjectInternalIdField;
        
        private Status statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubProjectInternalId {
            get {
                return this.subProjectInternalIdField;
            }
            set {
                this.subProjectInternalIdField = value;
                this.RaisePropertyChanged("SubProjectInternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class SimpleObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Subproject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SimpleObject projectField;
        
        private SimpleObject parentProjectField;
        
        private string managerCodeField;
        
        private System.Nullable<System.DateTime> startField;
        
        private System.Nullable<System.DateTime> finishField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SimpleObject Project {
            get {
                return this.projectField;
            }
            set {
                this.projectField = value;
                this.RaisePropertyChanged("Project");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SimpleObject ParentProject {
            get {
                return this.parentProjectField;
            }
            set {
                this.parentProjectField = value;
                this.RaisePropertyChanged("ParentProject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ManagerCode {
            get {
                return this.managerCodeField;
            }
            set {
                this.managerCodeField = value;
                this.RaisePropertyChanged("ManagerCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
                this.RaisePropertyChanged("Start");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> Finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
                this.RaisePropertyChanged("Finish");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class MethodResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool systemErrorOccurredField;
        
        private string systemErrorMessageField;
        
        private string businessErrorMessageField;
        
        private object dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool SystemErrorOccurred {
            get {
                return this.systemErrorOccurredField;
            }
            set {
                this.systemErrorOccurredField = value;
                this.RaisePropertyChanged("SystemErrorOccurred");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SystemErrorMessage {
            get {
                return this.systemErrorMessageField;
            }
            set {
                this.systemErrorMessageField = value;
                this.RaisePropertyChanged("SystemErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BusinessErrorMessage {
            get {
                return this.businessErrorMessageField;
            }
            set {
                this.businessErrorMessageField = value;
                this.RaisePropertyChanged("BusinessErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public object Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class SecurityRule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string roleCodeField;
        
        private string descriptionField;
        
        private string[] activityTypesField;
        
        private string[] securityRightsField;
        
        private string[] securityGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RoleCode {
            get {
                return this.roleCodeField;
            }
            set {
                this.roleCodeField = value;
                this.RaisePropertyChanged("RoleCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] ActivityTypes {
            get {
                return this.activityTypesField;
            }
            set {
                this.activityTypesField = value;
                this.RaisePropertyChanged("ActivityTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] SecurityRights {
            get {
                return this.securityRightsField;
            }
            set {
                this.securityRightsField = value;
                this.RaisePropertyChanged("SecurityRights");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] SecurityGroups {
            get {
                return this.securityGroupsField;
            }
            set {
                this.securityGroupsField = value;
                this.RaisePropertyChanged("SecurityGroups");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1099.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="www.croc.ru")]
    public partial class Right : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private EntityType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public EntityType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStartDateOfCurrentFiscalPeriod", WrapperNamespace="www.croc.ru", IsWrapped=true)]
    public partial class GetStartDateOfCurrentFiscalPeriodRequest {
        
        public GetStartDateOfCurrentFiscalPeriodRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStartDateOfCurrentFiscalPeriodResponse", WrapperNamespace="www.croc.ru", IsWrapped=true)]
    public partial class GetStartDateOfCurrentFiscalPeriodResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.croc.ru", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GetStartDateOfCurrentFiscalPeriodResult;
        
        public GetStartDateOfCurrentFiscalPeriodResponse() {
        }
        
        public GetStartDateOfCurrentFiscalPeriodResponse(System.Nullable<System.DateTime> GetStartDateOfCurrentFiscalPeriodResult) {
            this.GetStartDateOfCurrentFiscalPeriodResult = GetStartDateOfCurrentFiscalPeriodResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SilverLightServicesSoapChannel : ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SilverLightServicesSoapClient : System.ServiceModel.ClientBase<ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap>, ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap {
        
        public SilverLightServicesSoapClient() {
        }
        
        public SilverLightServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SilverLightServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SilverLightServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SilverLightServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetAvailableActivityTypes() {
            return base.Channel.GetAvailableActivityTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAvailableActivityTypesAsync() {
            return base.Channel.GetAvailableActivityTypesAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Role[] GetAvailableRoles() {
            return base.Channel.GetAvailableRoles();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Role[]> GetAvailableRolesAsync() {
            return base.Channel.GetAvailableRolesAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Right[] GetAvailableRights() {
            return base.Channel.GetAvailableRights();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Right[]> GetAvailableRightsAsync() {
            return base.Channel.GetAvailableRightsAsync();
        }
        
        public string[] GetAvailableGroups() {
            return base.Channel.GetAvailableGroups();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAvailableGroupsAsync() {
            return base.Channel.GetAvailableGroupsAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult CreateNewSecurityRule(ClarityTestappLoader.Console.SilverlightService.SecurityRule securityRule) {
            return base.Channel.CreateNewSecurityRule(securityRule);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> CreateNewSecurityRuleAsync(ClarityTestappLoader.Console.SilverlightService.SecurityRule securityRule) {
            return base.Channel.CreateNewSecurityRuleAsync(securityRule);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult DeleteSecurityRule(int[] ruleIds) {
            return base.Channel.DeleteSecurityRule(ruleIds);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> DeleteSecurityRuleAsync(int[] ruleIds) {
            return base.Channel.DeleteSecurityRuleAsync(ruleIds);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.SecurityRule[] GetCurrentSecurityRulesList() {
            return base.Channel.GetCurrentSecurityRulesList();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SecurityRule[]> GetCurrentSecurityRulesListAsync() {
            return base.Channel.GetCurrentSecurityRulesListAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult UpdateSecurityRule(ClarityTestappLoader.Console.SilverlightService.SecurityRule rule) {
            return base.Channel.UpdateSecurityRule(rule);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> UpdateSecurityRuleAsync(ClarityTestappLoader.Console.SilverlightService.SecurityRule rule) {
            return base.Channel.UpdateSecurityRuleAsync(rule);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.AddSubProjectResult AddSubProject(ClarityTestappLoader.Console.SilverlightService.Subproject newSubproject) {
            return base.Channel.AddSubProject(newSubproject);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.AddSubProjectResult> AddSubProjectAsync(ClarityTestappLoader.Console.SilverlightService.Subproject newSubproject) {
            return base.Channel.AddSubProjectAsync(newSubproject);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.SubProjectParams GetSubProjectParams(string ProjectCode) {
            return base.Channel.GetSubProjectParams(ProjectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SubProjectParams> GetSubProjectParamsAsync(string ProjectCode) {
            return base.Channel.GetSubProjectParamsAsync(ProjectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Status DeleteSubproject(string projectID) {
            return base.Channel.DeleteSubproject(projectID);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> DeleteSubprojectAsync(string projectID) {
            return base.Channel.DeleteSubprojectAsync(projectID);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Subproject GetSimpleProjectWithParent(string projectCode) {
            return base.Channel.GetSimpleProjectWithParent(projectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Subproject> GetSimpleProjectWithParentAsync(string projectCode) {
            return base.Channel.GetSimpleProjectWithParentAsync(projectCode);
        }
        
        public string GetClientUserName() {
            return base.Channel.GetClientUserName();
        }
        
        public System.Threading.Tasks.Task<string> GetClientUserNameAsync() {
            return base.Channel.GetClientUserNameAsync();
        }
        
        public string GetCurrentResourceCode() {
            return base.Channel.GetCurrentResourceCode();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentResourceCodeAsync() {
            return base.Channel.GetCurrentResourceCodeAsync();
        }
        
        public string GetCurrentUserCode() {
            return base.Channel.GetCurrentUserCode();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentUserCodeAsync() {
            return base.Channel.GetCurrentUserCodeAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.UserRight[] GetUserRights(string userName) {
            return base.Channel.GetUserRights(userName);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.UserRight[]> GetUserRightsAsync(string userName) {
            return base.Channel.GetUserRightsAsync(userName);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.UserRight[] GetCurrentUserRights() {
            return base.Channel.GetCurrentUserRights();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.UserRight[]> GetCurrentUserRightsAsync() {
            return base.Channel.GetCurrentUserRightsAsync();
        }
        
        public string GetObjectID(string code, string type) {
            return base.Channel.GetObjectID(code, type);
        }
        
        public System.Threading.Tasks.Task<string> GetObjectIDAsync(string code, string type) {
            return base.Channel.GetObjectIDAsync(code, type);
        }
        
        public string GetResourceCodeByEmail(string email) {
            return base.Channel.GetResourceCodeByEmail(email);
        }
        
        public System.Threading.Tasks.Task<string> GetResourceCodeByEmailAsync(string email) {
            return base.Channel.GetResourceCodeByEmailAsync(email);
        }
        
        public void ReportAboutClientError(string sourceName, string exceptionMessage, string exceptionStackTrace, string innerException) {
            base.Channel.ReportAboutClientError(sourceName, exceptionMessage, exceptionStackTrace, innerException);
        }
        
        public System.Threading.Tasks.Task ReportAboutClientErrorAsync(string sourceName, string exceptionMessage, string exceptionStackTrace, string innerException) {
            return base.Channel.ReportAboutClientErrorAsync(sourceName, exceptionMessage, exceptionStackTrace, innerException);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.ProjectSyncResults ProjectsSync(string ProjectCode, bool isMassUpdate) {
            return base.Channel.ProjectsSync(ProjectCode, isMassUpdate);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ProjectSyncResults> ProjectsSyncAsync(string ProjectCode, bool isMassUpdate) {
            return base.Channel.ProjectsSyncAsync(ProjectCode, isMassUpdate);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto ImportFromMSPFromFile(string projectCode, string userName, string path) {
            return base.Channel.ImportFromMSPFromFile(projectCode, userName, path);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto> ImportFromMSPFromFileAsync(string projectCode, string userName, string path) {
            return base.Channel.ImportFromMSPFromFileAsync(projectCode, userName, path);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto ImportFromMSP(ClarityTestappLoader.Console.SilverlightService.ImportProjectParamsDto importParamsDto) {
            return base.Channel.ImportFromMSP(importParamsDto);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ImportProjectResultDto> ImportFromMSPAsync(ClarityTestappLoader.Console.SilverlightService.ImportProjectParamsDto importParamsDto) {
            return base.Channel.ImportFromMSPAsync(importParamsDto);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.IsProjectImportInProgressExecResult IsProjectImportInProgress(string projectCode) {
            return base.Channel.IsProjectImportInProgress(projectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.IsProjectImportInProgressExecResult> IsProjectImportInProgressAsync(string projectCode) {
            return base.Channel.IsProjectImportInProgressAsync(projectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.GetResourcesExecutionResult GetClarityResources() {
            return base.Channel.GetClarityResources();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.GetResourcesExecutionResult> GetClarityResourcesAsync() {
            return base.Channel.GetClarityResourcesAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MspSessionParams GetMspSessionParams(System.Guid sessionId) {
            return base.Channel.GetMspSessionParams(sessionId);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MspSessionParams> GetMspSessionParamsAsync(System.Guid sessionId) {
            return base.Channel.GetMspSessionParamsAsync(sessionId);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.IsProjectLockedByCurrentUserExecResult IsProjectLockedByCurrentUser(string projectCode, string userDomainName) {
            return base.Channel.IsProjectLockedByCurrentUser(projectCode, userDomainName);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.IsProjectLockedByCurrentUserExecResult> IsProjectLockedByCurrentUserAsync(string projectCode, string userDomainName) {
            return base.Channel.IsProjectLockedByCurrentUserAsync(projectCode, userDomainName);
        }
        
        public string GetCurrentAddinVersion() {
            return base.Channel.GetCurrentAddinVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentAddinVersionAsync() {
            return base.Channel.GetCurrentAddinVersionAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.ResourceCalendarAvailability[] GetResourceAvailabilityPeriods(string[] resourceUniqueNames) {
            return base.Channel.GetResourceAvailabilityPeriods(resourceUniqueNames);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ResourceCalendarAvailability[]> GetResourceAvailabilityPeriodsAsync(string[] resourceUniqueNames) {
            return base.Channel.GetResourceAvailabilityPeriodsAsync(resourceUniqueNames);
        }
        
        public void SendAddinInnerSystemExceptionToSupport(string exceptionText) {
            base.Channel.SendAddinInnerSystemExceptionToSupport(exceptionText);
        }
        
        public System.Threading.Tasks.Task SendAddinInnerSystemExceptionToSupportAsync(string exceptionText) {
            return base.Channel.SendAddinInnerSystemExceptionToSupportAsync(exceptionText);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.ResourceAvailability GetCurrentResourceAvailability(string resourceID) {
            return base.Channel.GetCurrentResourceAvailability(resourceID);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.ResourceAvailability> GetCurrentResourceAvailabilityAsync(string resourceID) {
            return base.Channel.GetCurrentResourceAvailabilityAsync(resourceID);
        }
        
        public string GenerateNewResourceAvailabilityXML(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability) {
            return base.Channel.GenerateNewResourceAvailabilityXML(newResourceAvailability);
        }
        
        public System.Threading.Tasks.Task<string> GenerateNewResourceAvailabilityXMLAsync(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability) {
            return base.Channel.GenerateNewResourceAvailabilityXMLAsync(newResourceAvailability);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Status SetNewResourceAvailability(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability) {
            return base.Channel.SetNewResourceAvailability(newResourceAvailability);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> SetNewResourceAvailabilityAsync(ClarityTestappLoader.Console.SilverlightService.ResourceAvailability newResourceAvailability) {
            return base.Channel.SetNewResourceAvailabilityAsync(newResourceAvailability);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList GetTimesheetActionItems(string ResourceCode) {
            return base.Channel.GetTimesheetActionItems(ResourceCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList> GetTimesheetActionItemsAsync(string ResourceCode) {
            return base.Channel.GetTimesheetActionItemsAsync(ResourceCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Status SetTimesheetActionItems(ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList TimeSheetParams) {
            return base.Channel.SetTimesheetActionItems(TimeSheetParams);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Status> SetTimesheetActionItemsAsync(ClarityTestappLoader.Console.SilverlightService.SilverLigghtTimesheetList TimeSheetParams) {
            return base.Channel.SetTimesheetActionItemsAsync(TimeSheetParams);
        }
        
        public string GetTSComment(string TSid) {
            return base.Channel.GetTSComment(TSid);
        }
        
        public System.Threading.Tasks.Task<string> GetTSCommentAsync(string TSid) {
            return base.Channel.GetTSCommentAsync(TSid);
        }
        
        public string GetTSProjectComment(string InvId, string TSid) {
            return base.Channel.GetTSProjectComment(InvId, TSid);
        }
        
        public System.Threading.Tasks.Task<string> GetTSProjectCommentAsync(string InvId, string TSid) {
            return base.Channel.GetTSProjectCommentAsync(InvId, TSid);
        }
        
        public void NotifyManagerIfReturnAndProjectClosed(string managerEmail, string projectCode) {
            base.Channel.NotifyManagerIfReturnAndProjectClosed(managerEmail, projectCode);
        }
        
        public System.Threading.Tasks.Task NotifyManagerIfReturnAndProjectClosedAsync(string managerEmail, string projectCode) {
            return base.Channel.NotifyManagerIfReturnAndProjectClosedAsync(managerEmail, projectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Actual[] CheckActualsForTransfer(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals) {
            return base.Channel.CheckActualsForTransfer(actuals);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Actual[]> CheckActualsForTransferAsync(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals) {
            return base.Channel.CheckActualsForTransferAsync(actuals);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult TransferActuals(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals, string fromProjectCode, string toProjectCode, string toTaskInternalId) {
            return base.Channel.TransferActuals(actuals, fromProjectCode, toProjectCode, toTaskInternalId);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> TransferActualsAsync(ClarityTestappLoader.Console.SilverlightService.Actual[] actuals, string fromProjectCode, string toProjectCode, string toTaskInternalId) {
            return base.Channel.TransferActualsAsync(actuals, fromProjectCode, toProjectCode, toTaskInternalId);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult CopyProjectStructure(ClarityTestappLoader.Console.SilverlightService.ProjectStructureCopyParams copyParams) {
            return base.Channel.CopyProjectStructure(copyParams);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> CopyProjectStructureAsync(ClarityTestappLoader.Console.SilverlightService.ProjectStructureCopyParams copyParams) {
            return base.Channel.CopyProjectStructureAsync(copyParams);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.FormInitializeParams GetWipAdjustmentFormInitParams() {
            return base.Channel.GetWipAdjustmentFormInitParams();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.FormInitializeParams> GetWipAdjustmentFormInitParamsAsync() {
            return base.Channel.GetWipAdjustmentFormInitParamsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap.GetStartDateOfCurrentFiscalPeriod(ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest request) {
            return base.Channel.GetStartDateOfCurrentFiscalPeriod(request);
        }
        
        public System.Nullable<System.DateTime> GetStartDateOfCurrentFiscalPeriod() {
            ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest inValue = new ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest();
            ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse retVal = ((ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap)(this)).GetStartDateOfCurrentFiscalPeriod(inValue);
            return retVal.GetStartDateOfCurrentFiscalPeriodResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse> ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap.GetStartDateOfCurrentFiscalPeriodAsync(ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest request) {
            return base.Channel.GetStartDateOfCurrentFiscalPeriodAsync(request);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodResponse> GetStartDateOfCurrentFiscalPeriodAsync() {
            ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest inValue = new ClarityTestappLoader.Console.SilverlightService.GetStartDateOfCurrentFiscalPeriodRequest();
            return ((ClarityTestappLoader.Console.SilverlightService.SilverLightServicesSoap)(this)).GetStartDateOfCurrentFiscalPeriodAsync(inValue);
        }
        
        public bool IsCurrentUserTLAdminGroupMemberStub(string userDomainName) {
            return base.Channel.IsCurrentUserTLAdminGroupMemberStub(userDomainName);
        }
        
        public System.Threading.Tasks.Task<bool> IsCurrentUserTLAdminGroupMemberStubAsync(string userDomainName) {
            return base.Channel.IsCurrentUserTLAdminGroupMemberStubAsync(userDomainName);
        }
        
        public bool IsCurrentUserTLAdminGroupMember() {
            return base.Channel.IsCurrentUserTLAdminGroupMember();
        }
        
        public System.Threading.Tasks.Task<bool> IsCurrentUserTLAdminGroupMemberAsync() {
            return base.Channel.IsCurrentUserTLAdminGroupMemberAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Assignment[] GetProjectAssignments(long projectId) {
            return base.Channel.GetProjectAssignments(projectId);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Assignment[]> GetProjectAssignmentsAsync(long projectId) {
            return base.Channel.GetProjectAssignmentsAsync(projectId);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsByName(string projectName) {
            return base.Channel.GetProjectsByName(projectName);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsByNameAsync(string projectName) {
            return base.Channel.GetProjectsByNameAsync(projectName);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsByFilter(ClarityTestappLoader.Console.SilverlightService.ProjectFieldsFilter filter) {
            return base.Channel.GetProjectsByFilter(filter);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsByFilterAsync(ClarityTestappLoader.Console.SilverlightService.ProjectFieldsFilter filter) {
            return base.Channel.GetProjectsByFilterAsync(filter);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Activity[] GetProjectsWithRestriction() {
            return base.Channel.GetProjectsWithRestriction();
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Activity[]> GetProjectsWithRestrictionAsync() {
            return base.Channel.GetProjectsWithRestrictionAsync();
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Task[] GetTasks(string projectCode) {
            return base.Channel.GetTasks(projectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Task[]> GetTasksAsync(string projectCode) {
            return base.Channel.GetTasksAsync(projectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Actual[] GetProjectActuals(string projectCode) {
            return base.Channel.GetProjectActuals(projectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Actual[]> GetProjectActualsAsync(string projectCode) {
            return base.Channel.GetProjectActualsAsync(projectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.Resource[] GetProjectTeam(string projectCode) {
            return base.Channel.GetProjectTeam(projectCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.Resource[]> GetProjectTeamAsync(string projectCode) {
            return base.Channel.GetProjectTeamAsync(projectCode);
        }
        
        public ClarityTestappLoader.Console.SilverlightService.MethodResult DeleteVacationOtherWork(string otherWorkCode) {
            return base.Channel.DeleteVacationOtherWork(otherWorkCode);
        }
        
        public System.Threading.Tasks.Task<ClarityTestappLoader.Console.SilverlightService.MethodResult> DeleteVacationOtherWorkAsync(string otherWorkCode) {
            return base.Channel.DeleteVacationOtherWorkAsync(otherWorkCode);
        }
    }
}
